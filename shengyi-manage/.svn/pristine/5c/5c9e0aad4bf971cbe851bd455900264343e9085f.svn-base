/**
 */
package com.sz.control.refund;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.sz.common.util.StringUtil;
import com.sz.exception.MessageException;
import com.sz.pojo.manage.page.PageInfo;
import com.sz.pojo.manage.page.PaginationResult;
import com.sz.pojo.manage.refund.RefundOrder;
import com.sz.pojo.request.ResultMessage;
import com.sz.service.refund.RefundOrderService;

/**
 * 
 * @author goff.yin 
 * @date 2017-8-17   下午2:17:06 
 * @version 1.0.0 
 */
@Controller
@RequestMapping("/refundOrder")
public class RefundOrderController {
	
	private static Logger logger = LoggerFactory.getLogger(RefundOrderController.class);
	
	@Autowired
	private RefundOrderService refundOrderService;
	
	@RequestMapping(value = "/query")
	public ModelAndView query(HttpServletRequest request) {
		ModelAndView view = new ModelAndView();
		try {
			String mobile = request.getParameter("mobile");
			if("".equals("1")){
				throw new MessageException("滚一边去");
			}
			PageInfo info = PageInfo.getPageInfo(request);
			PaginationResult<RefundOrder> paginationResult = refundOrderService.queryUserRefundOrderList(info,mobile);
			view.addObject("mobile", mobile);
			view.addObject("paginationResult", paginationResult);
			view.setViewName("refundOrder.list");
		}catch (MessageException e) {
			view.setViewName("web.error");
			view.addObject("errorMsg",e.getMessage());
			logger.info("查询充值记录出现异常:", e.getMessage());
		} catch (Exception e) {
			view.setViewName("web.error");
			view.addObject("errorMsg","系统错误！");
			logger.error("查询充值记录出现异常", e);
		}
		return view;
	}
	@ResponseBody
	@RequestMapping(value = "/examine")
	public Map<String, Object> examine(HttpServletRequest request) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		try {
			String refundId = request.getParameter("refundId");
			if(StringUtil.isNullOrEmpty(refundId)){
				throw new MessageException("缺少refundId");
			}
			String remark = request.getParameter("remark");
			String isAgree = request.getParameter("isAgree");
			if(StringUtil.isNullOrEmpty(isAgree)){
				throw new MessageException("缺少isAgree");
			}
			ResultMessage result = refundOrderService.examineRefundOrder(Integer.valueOf(refundId),Integer.valueOf(isAgree),remark);
			if(!result.success()){
				throw new MessageException(result.getMessage());
			}
			resultMap.put("code", "0000");
			resultMap.put("msg", "操作成功,等待退款结果");
		}catch (MessageException e) {
			logger.info("审核订单异常:", e.getMessage());
			resultMap.put("code", "9999");
			resultMap.put("msg", e.getMessage());
		} catch (Exception e) {
			logger.error("审核订单出现异常", e);
			resultMap.put("code", "9999");
			resultMap.put("msg", "操作失败");
		}
		return resultMap;
		
	}
	
}
