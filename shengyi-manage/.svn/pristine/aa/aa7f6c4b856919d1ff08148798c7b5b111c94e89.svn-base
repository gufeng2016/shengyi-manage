/**
 */
package com.sz.dao.refund.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.sz.common.annotation.ChooseDataSource;
import com.sz.common.constant.DataSourceConstant;
import com.sz.common.db.JDBCBaseDao;
import com.sz.common.util.ReflectUtil;
import com.sz.dao.refund.RefundOrderDao;
import com.sz.pojo.manage.page.PageInfo;
import com.sz.pojo.manage.page.PaginationResult;
import com.sz.pojo.manage.refund.RefundOrder;
import com.sz.pojo.manage.sqlEntry.SQLCondition;

/**
 * 
 * @author goff.yin 
 * @date 2017-8-17   下午2:21:16 
 * @version 1.0.0 
 */
@Repository
public class RefundOrderDaoIMpl implements RefundOrderDao{
	
	@Autowired
	private JDBCBaseDao jdbcDao;
	private static String nickName = "ro".toUpperCase();
	/**
	 */
	@Override
	@ChooseDataSource(mainType=DataSourceConstant.BIZ_TYPE_SLAVE,bizType=DataSourceConstant.PROJECT_SUFFIX)
	public PaginationResult<RefundOrder> queryUserRefundOrderList( Class<RefundOrder> clazz, List<SQLCondition> conditions, PageInfo info, String order) {
		String sqlParams = ReflectUtil.createSqlParams(clazz,nickName);
		sqlParams = sqlParams.replace((nickName+".mobile").toUpperCase(), "AC.MOBILE");
		String sqlMuBan = "SELECT %s FROM t_refund_order %s LEFT JOIN T_ACCOUNT AC ON %s.USER_ID = AC.USER_ID where 1=1 ";
		String sql = String.format(sqlMuBan, sqlParams,nickName,nickName);
		String sqlFoot = "";
		List<Object> args = new ArrayList<Object>();
		if(conditions != null && conditions.size()>0){
			for (SQLCondition con : conditions) {
				if(con.isLike()){
					sqlFoot += " and "+("AC."+con.getKey()).toUpperCase() + " like ?";
					args.add("%"+con.getValue()+"%");
				}else{
					sqlFoot += " and "+(nickName+"."+con.getKey()).toUpperCase() + " = ?";
					args.add(con.getValue());
				}
			}
		}
		int count = jdbcDao.queryForInt(String.format(sqlMuBan, "count(1)",nickName,nickName)+sqlFoot,args.toArray());
		sql += sqlFoot + " limit ?,? ";
		args.add(info.getStartRow());
		args.add(info.getPageSize());
		List<RefundOrder> lists = jdbcDao.queryList(clazz, sql,args.toArray());
		return new PaginationResult<RefundOrder>(count, lists);
	}
	
	
}
